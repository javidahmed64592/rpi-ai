name: Build API

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Create wheel
        run: |
          python -m build --wheel
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: rpi_ai_wheel
          path: dist/rpi_ai-*-py3-none-any.whl
  package_constructor:
    runs-on: ubuntu-latest
    needs: build_wheel
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Get artifact from build_wheel
        uses: actions/download-artifact@v4
        with:
          name: rpi_ai_wheel
      - name: Process wheel
        run: |
          WHEEL_FILE=$(ls rpi_ai-*-py3-none-any.whl)
          echo "Found wheel: ${WHEEL_FILE}"

          VERSION=$(echo $WHEEL_FILE | sed -n 's/.*-\([0-9]*\.[0-9]*\.[0-9]*\)-.*/\1/p')
          echo "Application version: ${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

          echo "Moving wheel file to 'release/' directory"
          mv $WHEEL_FILE release/$WHEEL_FILE

          echo "release/:"
          ls release/
      - name: Install conda
        uses: conda-incubator/setup-miniconda@v2
      - name: Run constructor
        shell: bash -el {0}
        run: |
          conda install -y constructor
          cd release
      - name: Run constructor
        shell: bash -el {0}
        run: |
          constructor --platform linux-aarch64 .
      - name: Upload artifact
        env:
          VERSION: ${{ env.VERSION }}
        uses: actions/upload-artifact@v4
        with:
          name: RPi-AI-${{ env.VERSION }}-Linux-aarch64_build
          path: release/RPi-AI-${{ env.VERSION }}-Linux-aarch64.sh
