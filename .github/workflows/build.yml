name: Build and Publish Constructor Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install build dependencies
        run: python -m pip install --upgrade pip build
      - name: Build wheel
        run: |
          python -m build --wheel
          WHEEL_FILE=$(ls dist/rpi_ai-*-py3-none-any.whl)
          echo "VERSION=$(echo $WHEEL_FILE | sed -n 's/.*-\([0-9]*\.[0-9]*\.[0-9]*\)-.*/\1/p')" >> $GITHUB_ENV
          mv $WHEEL_FILE .
      - uses: mamba-org/setup-micromamba@v2
        with:
          init-shell: >-
            bash
          post-cleanup: 'all'
      - name: Install and run constructor
        run: |
          micromamba install -y -n base -c conda-forge constructor
          micromamba run -n base constructor . --platform linux-aarch64 --conda-exe $(which micromamba)
          chmod +x RPi-AI-*-Linux-aarch64.sh
      - name: Upload artifact
        env:
          VERSION: ${{ env.VERSION }}
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: RPi-AI-${{ env.VERSION }}-Linux-aarch64.sh

  install:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./artifact
      - name: Run installation script
        run: |
          INSTALL_SCRIPT=$(ls ./artifact/RPi-AI-*-Linux-aarch64.sh)
          chmod +x ${INSTALL_SCRIPT}
          ${INSTALL_SCRIPT} -b -p /home/runner/rpi-ai
